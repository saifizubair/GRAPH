package com.company;

import java.lang.*;
import java.util.*;
import java.io.*;


public class Main {
    static class edge {
        int src;
        int nbr ;

        public edge(int src, int nbr) {
            this.src = src;
            this.nbr = nbr;
        }
    }
    public static void main(String[]args) throws Exception {
        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
        int n =Integer.parseInt(br.readLine());
        int k=Integer.parseInt(br.readLine());
        int vtces =n;
        ArrayList<edge>[]graph =new ArrayList[vtces];
        for (int i=0;i<vtces;i++){
            graph[i]=new ArrayList<>();
        }
        int edges =k;
        for (int i=0;i<edges;i++){
            String[]parts =br.readLine().split(" ");
            int v1 =Integer.parseInt(parts[0]);
            int v2 =Integer.parseInt(parts[1]);
            graph[v1].add(new edge(v1,v2));
            graph[v2].add(new edge(v2,v1));
        }
        boolean[]visited =new boolean[vtces];
        ArrayList<ArrayList<Integer>>comps =new ArrayList<>();
        for (int v=0;v<vtces;v++){
            if (visited[v]==false){
            ArrayList<Integer>comp =new ArrayList<>();
            gcc(graph,v,visited,comp);
            comps.add(comp);
        }
        }
        System.out.println(comps);
        int count =0;
        for (int i=0;i<comps.size();i++){
            for (int j=i+1;j<comps.size();j++){
                count += comps.get(i).size()*comps.get(j).size();
            }
        }
        System.out.println(count);
    }
    public static void gcc(ArrayList<edge>[]graph,int src,boolean[]visited,ArrayList<Integer>comp){
        comp.add(src);
        visited[src]=true;
        for (edge e :graph[src]){
            if (!visited[e.nbr]){
                gcc(graph,e.nbr,visited,comp);
            }
        }
    }
}


input -->
7
5
0 1
2 3
4 5
5 6
4 6

output-->
[[0, 1], [2, 3], [4, 5, 6]]
16
