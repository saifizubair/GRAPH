package com.company;

import javax.swing.text.EditorKit;
import java.lang.*;
import java.util.*;
import java.io.*;


public class Main {
    static class edge {
        int src;
        int nbr;
        int wt;

        public edge(int src, int nbr, int wt) {
            this.src = src;
            this.nbr = nbr;
            this.wt = wt;
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int vtces = Integer.parseInt(br.readLine());
        ArrayList<edge>[] graph = new ArrayList[vtces];
        for (int i = 0; i < vtces; i++) {
            graph[i] = new ArrayList<>();
        }
        int edges = Integer.parseInt(br.readLine());
        for (int i = 0; i < edges; i++) {
            String[] parts = br.readLine().split(" ");
            int v1 = Integer.parseInt(parts[0]);
            int v2 = Integer.parseInt(parts[1]);
            int wt = Integer.parseInt(parts[2]);
            graph[v1].add(new edge(v1, v2, wt));
            graph[v2].add(new edge(v2, v1, wt));
        }
        int src = Integer.parseInt(br.readLine());
        int dest = Integer.parseInt(br.readLine());

        boolean[] visited = new boolean[vtces];
        boolean path = haspath(graph, src, dest, visited);
        System.out.println(path);
    }

    public static boolean haspath(ArrayList<edge>[] graph, int src, int dest, boolean[] visited) {
        if (src == dest) {
            return true;
        }
        visited[src] = true;
        for (edge Edge : graph[src]) {
            if (visited[Edge.nbr] == false) {
                boolean hasnpath = haspath(graph, Edge.nbr, dest, visited);
                if (hasnpath == true) {
                    return true;
                }
            }
        }
        return false;
    }
}





input --> 
7
8
0 1 10
1 2 10
2 3 10
0 3 10
3 4 10
4 5 10
5 6 10
4 6 10
0
6

output --> 
true

